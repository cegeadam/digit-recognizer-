# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w6JE2z2XfYvBFxGJe_X_14WEvg40cQG8
"""

# gerekli kütüphaneler
import pandas as pd
import tensorflow as tf
from tensorflow.keras import layers, models
import matplotlib.pyplot as plt

# kaggle yüklendi
!pip install -q kaggle
!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

# digit-recognizer veri setini çek
!kaggle competitions download -c digit-recognizer
!unzip digit-recognizer.zip

# veri setini oku
train = pd.read_csv('train.csv')
test = pd.read_csv('test.csv')

# eğitim verisi
x_train = train.drop('label', axis=1).values.reshape(-1, 28, 28, 1)
y_train = train['label'].values

# test verisi
x_test = test.values.reshape(-1, 28, 28, 1)

# veriyi normalize etme
x_train, x_test = x_train / 255.0, x_test / 255.0

# CNN modeli oluştur
model = models.Sequential([
    layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),
    layers.MaxPooling2D((2, 2)),
    layers.Conv2D(64, (3, 3), activation='relu'),
    layers.MaxPooling2D((2, 2)),
    layers.Flatten(),
    layers.Dense(128, activation='relu'),
    layers.Dropout(0.2),
    layers.Dense(10, activation='softmax')
])

# modeli derle
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# modeli eğit
history = model.fit(x_train, y_train, epochs=5, batch_size=64, validation_split=0.2)

# eğitim sürecini görselleştir
plt.plot(history.history['accuracy'], label='Eğitim Doğruluğu')
plt.plot(history.history['val_accuracy'], label='Doğrulama Doğruluğu')
plt.legend()
plt.show()

# tahminler için
predictions = model.predict(x_test)

# ilk 7 tahmin
for i in range(7):
    plt.imshow(x_test[i].reshape(28, 28), cmap='gray')
    plt.title(f"Tahmin Edilen: {tf.argmax(predictions[i])}")
    plt.show()

